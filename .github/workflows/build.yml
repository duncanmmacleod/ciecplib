# -----------------------
#
# Run a full build-and-test from the git repo
# using a combination of conda and pip to install
# all optional dependencies.
#
# This is the 'full' test suite.
#
# -----------------------

name: Build and test

on:
  push:
    branches:
      - main
      - release/**
  pull_request:
    branches:
      - main
      - release/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  conda:
    name: Python ${{ matrix.python-version }} (${{ matrix.os }})

    strategy:
      fail-fast: false
      matrix:
        os:
          - macOS
          - Ubuntu
          - Windows
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
    runs-on: ${{ matrix.os }}-latest

    # this is needed for conda environments to activate automatically
    defaults:
      run:
        shell: bash -el {0}

    steps:
    - name: Get source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Cache conda packages
      uses: actions/cache@v2
      env:
        # increment to reset cache
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ matrix.python-version }}-${{ env.CACHE_NUMBER }}
        restore-keys: ${{ runner.os }}-conda-${{ matrix.python-version }}-

    - name: Configure conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: test
        miniforge-variant: Mambaforge
        python-version: ${{ matrix.python-version }}
        use-mamba: true
        # this is needed for caching to work properly:
        use-only-tar-bz2: true

    - name: Conda info
      run: mamba info --all

    - name: Install dependencies with conda
      run: |
        # parse requirements to install as much as possible with conda
        mamba install --name base pip2conda
        ${CONDA_PYTHON_EXE} -m pip2conda \
            --all \
            --output environment.txt \
            --python-version ${{ matrix.python-version }}
        echo "-----------------"
        cat environment.txt
        echo "-----------------"
        # install the requested packages, ensuring that all of the packages
        # we use explicitly are installed as well
        mamba install --quiet --yes --name test \
            pip \
            pytest \
            pytest-cov \
            --file environment.txt

    - name: Install ciecplib
      run: python -m pip install .[tests] --no-build-isolation -vv

    - name: Package list
      run: mamba list --name test

    - name: Run test suite
      run: python -m pytest -ra --verbose --cov ciecplib --pyargs ciecplib --cov-report=xml --junitxml=pytest.xml

    - name: Coverage report
      run: python -m coverage report --show-missing

    - name: Publish coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        flags: ${{ runner.os }},python${{ matrix.python-version }}

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: pytest-conda-${{ matrix.os }}-${{ matrix.python-version }}
        path: pytest.xml
